{"mappings":"oeAcA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,aAAaC,kBAC3CC,UAAWH,SAASC,cAAc,iBAClCG,WAAYJ,SAASC,cAAc,kBACnCI,OAAQL,SAASC,cAAc,WA0BjCH,EAAKK,UAAUG,iBAAiB,SAAS,IAjBrB,CAAAC,IAClBA,EAAST,EAAKC,MAAMS,MACpB,IAAIC,GAAU,EAAAb,EAAAc,SAAQZ,EAAKO,OAAOM,UAAY,GAAKC,SAASd,EAAKO,OAAOQ,iBAAiBC,MAAMC,OAAS,GACxG,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAQS,IAAK,CAC/B,MAAMC,EAASjB,SAASkB,cAAc,OACtCD,EAAOH,MAAMK,gBAVR,IAAIC,KAAKC,MAAsB,SAAhBD,KAAKE,UACxBC,SAAS,IACTC,SAAS,EAAG,KASbP,EAAOH,MAAMC,MAAQN,EAAU,KAC/BQ,EAAOH,MAAMW,OAAShB,EAAU,KAChCX,EAAKO,OAAOqB,OAAOT,GACnBR,GAAW,EACb,GAO6CkB,KAC/C7B,EAAKM,WAAWE,iBAAiB,SAAS,KAJxCR,EAAKO,OAAOuB,UAAY,EAIsB","sources":["src/js/hw-06/hw-06-10.js"],"sourcesContent":["// Завдання 10 (виконувати не обов'язково)\n// Напиши скрипт створення і очищення колекції елементів. Користувач вводить кількість\n// елементів в input і натискає кнопку Створити, після чого рендериться колекція. Натисненням\n// на кнопку Очистити, колекція елементів очищається.\n\n// Створи функцію createBoxes(amount), яка приймає один параметр - число. Функція створює\n// стільки < div >, скільки вказано в amount і додає їх у div#boxes.\n\n// Розміри найпершого <div> - 30px на 30px.\n// Кожен елемент після першого повинен бути ширшим і вищим від попереднього на 10px.\n// Всі елементи повинні мати випадковий колір фону у форматі HEX. Використовуй готову\n// функцію getRandomHexColor для отримання кольору.\n\n// Створи функцію destroyBoxes(), яка очищає вміст div#boxes, у такий спосіб видаляючи всі створені елементи.\nimport { isEmpty } from 'lodash';\nconst refs = {\n  input: document.querySelector('#controls').firstElementChild,\n  createBtn: document.querySelector('[data-create]'),\n  destroyBtn: document.querySelector('[data-destroy]'),\n  divBox: document.querySelector('#boxes'),\n};\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\n\nconst createBoxes = amount => {\n  amount = refs.input.value;\n  let boxSide = isEmpty(refs.divBox.children) ? 30 : parseInt(refs.divBox.lastElementChild.style.width) + 10;\n  for (let i = 0; i < amount; i++) {\n    const newDiv = document.createElement('div');\n    newDiv.style.backgroundColor = getRandomHexColor();\n    newDiv.style.width = boxSide + 'px';\n    newDiv.style.height = boxSide + 'px';\n    refs.divBox.append(newDiv);\n    boxSide += 10;\n  }\n};\n\nconst destroyBoxes = () => {\n  refs.divBox.innerHTML = '';\n};\n\nrefs.createBtn.addEventListener('click', () => createBoxes());\nrefs.destroyBtn.addEventListener('click', () => destroyBoxes());\n"],"names":["$f1q41","parcelRequire","$eeb3b592182acf13$var$refs","input","document","querySelector","firstElementChild","createBtn","destroyBtn","divBox","addEventListener","amount","value","boxSide","isEmpty","children","parseInt","lastElementChild","style","width","i","newDiv","createElement","backgroundColor","Math","floor","random","toString","padStart","height","append","$eeb3b592182acf13$var$createBoxes","innerHTML"],"version":3,"file":"hw-06-10.58030214.js.map"}